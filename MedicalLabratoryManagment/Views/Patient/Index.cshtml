<section class="container mt-4">
    <h2>Patient Data</h2>
    <form id="patientForm" class="row g-3">
        <div class="col-md-6">
            <label for="patientID" class="form-label">Patient ID</label>
            <input type="text" class="form-control" id="patientID" placeholder="Enter Patient ID" disabled>
        </div>
        <div class="col-md-6">
            <label for="age" class="form-label">Age</label>
            <input type="number" class="form-control" id="age" placeholder="Enter Age" min="0" disabled>
        </div>
        <div class="col-md-12">
            <label for="patientName" class="form-label">Patient Name</label>
            <input type="text" class="form-control" id="patientName" placeholder="Enter Patient Name" disabled>
        </div>
        <div class="col-md-6">
            <label for="address" class="form-label">Address</label>
            <input type="text" class="form-control" id="address" placeholder="Enter Address" disabled>
        </div>
        <div class="col-md-6">
            <label for="phoneNo" class="form-label">Phone No</label>
            <input type="text" class="form-control" id="phoneNo" placeholder="Enter Phone Number" disabled>
        </div>
        <div class="col-md-4">
            <label for="gender" class="form-label">Gender</label>
            <select class="form-select" id="gender" disabled>
                <option value="">Select Gender</option>
                <option value="Male">Male</option>
                <option value="Female">Female</option>
            </select>
        </div>
        <div class="col-md-4">
            <label for="maritalStatus" class="form-label">Marital Status</label>
            <select class="form-select" id="maritalStatus" disabled>
                <option value="">Select Marital Status</option>
                <option value="Single">Single</option>
                <option value="Married">Married</option>
            </select>
        </div>
        <div class="col-md-4">
            <label for="bloodGroup" class="form-label">Blood Group</label>
            <select class="form-select" id="bloodGroup" disabled>
                <option value="">Select Blood Group</option>
                <option value="A+">A+</option>
                <option value="A-">A-</option>
                <option value="B+">B+</option>
                <option value="B-">B-</option>
                <option value="AB+">AB+</option>
                <option value="AB-">AB-</option>
                <option value="O+">O+</option>
                <option value="O-">O-</option>
            </select>
        </div>
        <div class="col-12 d-flex justify-content-center gap-2">
            <button type="button" id="addPatient" class="btn btn-primary">Add</button>
            <button type="button" id="savePatient" class="btn btn-success">Save</button>
            <button type="button" id="searchPatient" class="btn btn-info">Search</button>
            <button type="button" id="deletePatient" class="btn btn-danger">Delete</button>
            <button type="button" id="cancel" class="btn btn-secondary">Cancel</button>
        </div>
    </form>
</section>

<!-- Modal for displaying patient search results -->
<div class="modal fade" id="patientSearchModal" tabindex="-1" aria-labelledby="patientSearchModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content" style="overflow-x:scroll;">
            <div class="modal-header">
                <h5 class="modal-title" id="patientSearchModalLabel">Search Patients</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <table id="patientDataTable" class="table table-striped">
                    <thead>
                        <tr>
                            <th>Patient ID</th>
                            <th>Name</th>
                            <th>Age</th>
                            <th>Address</th>
                            <th>Phone No</th>
                            <th>Gender</th>
                            <th>Marital Status</th>
                            <th>Blood Group</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Data will be populated here dynamically -->
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {


        var table = $('#patientDataTable').DataTable({
            "ajax": {
                "url": "/patient/all", // Adjust this URL to your endpoint
                "dataSrc": ""
            },
            "columns": [
                { "data": "patientID" },
                { "data": "patientName" },
                { "data": "age" },
                { "data": "address" },
                { "data": "phoneNo" },
                { "data": "gender" },
                { "data": "maritalStatus" },
                { "data": "bloodGroup" }
            ]
        });

        $('#patientDataTable tbody').on('click', 'tr', function () {
            var data = table.row(this).data();
            $('#patientID').val(data.patientID);
            $('#patientName').val(data.patientName);
            $('#age').val(data.age);
            $('#address').val(data.address);
            $('#phoneNo').val(data.phoneNo);
            $('#gender').val(data.gender);
            $('#maritalStatus').val(data.maritalStatus);
            $('#bloodGroup').val(data.bloodGroup);
            $('form#patientForm').find(':input').not('#patientID').prop('disabled', false);
            $('#patientSearchModal').modal('hide');
        });

        function clearForm(){
            // Code to reset/cancel form
            $('form#patientForm')[0].reset();
            $('form#patientForm').find(':input').not('#patientID').not('button').prop('disabled', true);
        }


        function saveOrUpdate(){
            var patientId = $('#patientID').val().trim();  // Assuming there's an input field for Patient ID

            // Prepare the patient data from form inputs
            var patientData = {
                PatientID: patientId != '' ? patientId : 0,
                PatientName: $('#patientName').val().trim(),
                Address: $('#address').val().trim(),
                PhoneNo: $('#phoneNo').val().trim(),
                Gender: $('#gender').val(),
                Age: parseInt($('#age').val()),
                MaritalStatus: $('#maritalStatus').val(),
                BloodGroup: $('#bloodGroup').val()
            };

            // Define the API endpoint and method based on whether it's an add or update action
            var apiEndpoint = patientId ? "/Patient/UpdatePatient" : "/Patient/AddPatient";
            var method = patientId ? "PUT" : "POST";

            const payload = {
                method: method,
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(patientData)
            };

            // Perform the AJAX request
            fetch(apiEndpoint, payload)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Please enter all the information.');
                    }
                    const verb = patientId == '' ? 'saved' : 'updated';
                    toastr.success(`Patient data ${verb} successfully.`);
                    table.ajax.reload().draw();
                    $('form#patientForm').find(':input').not('#patientID').not('button').prop('disabled', true);
                })
                .catch(error => {
                    toastr.error(error.message);
                    console.error('Error:', error);
                });
        }

        $('#addPatient').click(function () {
            // Reset the form to clear all inputs
            $('form#patientForm')[0].reset();
            
            // Enable all form fields that may be disabled except for the patientID field
            $('form#patientForm').find(':input').not('#patientID').prop('disabled', false);
        });

        $('#savePatient').click(function () {
            saveOrUpdate();
        });

        $('#searchPatient').click(function () {
            // Code to search for a patient
            $('#patientSearchModal').modal('show');
        });

        $('#deletePatient').click(function () {
            var patientId = $('#patientID').val(); // Assumes the patient ID is stored in an input field with id 'patientID'

            if (!patientId) {
                toastr.error('No patient ID provided');
                return; // Prevent deletion if no ID is provided
            }

            fetch('/Patient/delete/' + patientId, {
                method: 'DELETE',
            }).then(response => {
                    if (response.ok) {
                        clearForm();
                        toastr.success('Patient deleted successfully');
                        table.ajax.reload().draw();
                    } else {
                        throw new Error('Something went wrong with the delete request');
                    }
                })
                .catch(error => {
                    toastr.error('Error deleting patient: ' + error.message);
                    console.error('Error:', error);
                });
        });



        $('#cancel').click(clearForm);
    });

</script>