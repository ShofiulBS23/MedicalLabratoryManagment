<style>
    .content {
        display: flex;
        justify-content: space-between;
    }

    .form-left, .table-right {
        width: 48%;
    }

    .form-group {
        margin-bottom: 10px;
    }

    label {
        display: inline-block;
        width: 40%;
    }

    input[type="text"], input[type="date"] {
        width: 58%;
        padding: 8px;
    }

    .table-container {
        margin-bottom: 10px;
    }

    .table-buttons {
        text-align: center;
    }

    button {
        background-color: #4CAF50;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        padding: 10px 20px;
        margin: 5px;
    }

        button:hover {
            background-color: #45a049;
        }

    table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 10px;
    }

    th, td {
        border: 1px solid black;
        padding: 8px;
        text-align: left;
    }

    .buttons {
        text-align: center;
        margin-top: 20px;
    }

    /* Reduce vertical spacing */

    div.dataTables_wrapper div.dataTables_info {
        padding-top: 0px;
    }

    .table > tbody > tr > td, .table > tbody > tr > th, .table > tfoot > tr > td, .table > tfoot > tr > th, .table > thead > tr > td, .table > thead > tr > th {
        padding: 4px 8px 4px 8px;
    }
    /* End Reduce vertical spacing */

    :is(#patientDetailsTable_filter,#testsAvailableTable_filter) > label > input[type=search] {
        position: relative;
        right: 97px;
    }
</style>

<section class="container">
    <h2 class="mb-4">Bills Details</h2>
    <div class="row">
        <div class="col-md-6">
            <form id="billForm">
                <div class="mb-3">
                    <label for="txtBill_No" class="form-label">Bill No:</label>
                    <input type="text" class="form-control" id="txtBill_No" name="txtBill_No" disabled>
                </div>
                <div class="mb-3">
                    <label for="txtPatient_ID" class="form-label">Patient ID:</label>
                    <input type="text" class="form-control" id="txtPatient_ID" name="txtPatient_ID" disabled>
                </div>
                <div class="mb-3">
                    <label for="txtPatient_Name" class="form-label">Patient Name:</label>
                    <input type="text" class="form-control" id="txtPatient_Name" name="txtPatient_Name" disabled>
                </div>
                <div class="mb-3">
                    <label for="txtTprice" class="form-label">Total Price:</label>
                    <input type="text" class="form-control" id="txtTprice" name="txtTprice" disabled>
                </div>
                <div class="mb-3">
                    <label for="txtDate" class="form-label">Date:</label>
                    <input type="date" class="form-control" id="txtDate" disabled>
                </div>
            </form>
        </div>
        <div class="col-md-6">
            <table id="DGVBills" class="table table-striped">
                <thead>
                    <tr>
                        <th>Test ID</th>
                        <th>Test Name</th>
                        <th>Price</th>
                        <th>Delete</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Dynamic table rows will go here -->
                </tbody>
            </table>
            <div class="d-flex justify-content-between mb-4">
                <button id="btnAddTest" disabled>Add Test</button>
                <button id="btnAddPatient" class="btn btn-primary" disabled>Add Patient</button>
            </div>
        </div>
    </div>
    <div class="d-flex justify-content-center mt-4">
        <button id="btnSave" class="btn btn-success me-2">Save</button>
        <button id="btnSearch" class="btn btn-secondary me-2">Search</button>
        <button id="btnAdd" class="btn btn-info me-2">Add</button>
        <button id="btnDelete" class="btn btn-danger me-2">Delete</button>
        <button id="btnCancel" class="btn btn-warning">Cancel</button>
    </div>
</section>

<partial name="_TestSelectModal"/> 
<partial name="_PatientDetailsModal"/>
@* <partial name="UserPatientModal" />
 *@

<!-- Modal (Hidden by default) -->
<div id="patientModal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Select Patient</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="hidePatientsModal()">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" style="overflow-x:scroll;">
                <table id="patientsTable" class="display">
                    <thead>
                        <tr>
                            <th>Patient ID</th>
                            <th>Name</th>
                            <th>Address</th>
                            <th>Phone</th>
                            <th>Gender</th>
                            <th>Age</th>
                            <th>Marital Status</th>
                            <th>Blood Group</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Data populated by DataTables JS -->
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>


<script>

    var hideModal = () => { $('#testSelectionModal').modal('hide') }
    var hidePatientModal = () => { $('#patientDetailsModal').modal('hide'); }
    var hidePatientsModal = () => { $('#patientModal').modal('hide'); }
    var billingTable;


    function fetchOrderDetails(patientId, billId) {
        $.ajax({
            url: '/Bill/GetOrderDetailsByPatientAndBill',
            method: 'GET',
            data: {
                billNo: billId,
                patientId: patientId
            },
            dataType: 'json',
            success: function (testData) {
                billingTable.clear();

                // Add new data with MinValue and MaxValue as hidden
                testData.forEach(function (test) {
                    billingTable.row.add([
                        test.testID,
                        test.test.testName,
                        test.price,
                        '<button class="delete-btn btn btn-danger">Delete</button>',
                        test.minivalue,  // Hidden
                        test.maxvalue    // Hidden
                    ]);
                });


                $('#btnAddTest').prop('disabled', false);
                $('#btnAddPatient').prop('disabled', false);

                billingTable.draw();
            },
            error: function (error) {
                console.log('Error fetching tests:', error);
            }
        });

    }


    function disableForm(flag) {
        const inputs = $("#billForm :input").not('#txtBill_No').not('#txtPatient_ID');
        inputs.prop("disabled", flag);
        // Clear the form fields
        $('#txtBill_No').val('');
        $('#txtPatient_ID').val('');
        $('#txtPatient_Name').val('');
        $('#txtTprice').val('');
        $('#txtDate').val('');

        billingTable.clear().draw(); // This removes all rows and redraws the table

        // Disable the cancelButton itself or any other buttons as needed
        $('#btnAddTest').prop('disabled', flag);
        $('#btnAddPatient').prop('disabled', flag);
    }

    $(document).ready(function () {
        // Add delete functionality to DGVBills

        billingTable = $('#DGVBills').DataTable({
            "paging": true,
            "searching": false,
            'columnDefs': [
                { 'visible': false, 'targets': [4, 5] }  // Hiding the MinValue and MaxValue columns
            ]
        });

        $('#DGVBills tbody').on('click', 'button.delete-btn', function () {
            billingTable.row($(this).parents('tr')).remove().draw();
        });

        $('#btnAddTest').click(() => {
            $('#testSelectionModal').modal('show');
        });

        $('#btnSearch').click(function () {
            $('#patientDetailsModal').modal('show');
        });
        $('#btnSave').click(function () {

            const billId = $('#txtBill_No').val().trim();
            const patientId = $('#txtPatient_ID').val().trim();
            if (!billId || !patientId) {
                toastr.error('Select an ID');
                return;
            }

            toastr.success('Data saved successfully');
        });

        $('#btnCancel').click(function () {
            disableForm(true);
        });
        $('#btnAdd').click(function () {
            disableForm(false);
        });
        $('#btnDelete').click(function () {
            const billId = $('#txtBill_No').val().trim();
            const patientId = $('#txtPatient_ID').val().trim();
            if (!billId || !patientId) {
                toastr.error('Select an ID');
                return;
            }

            // Send POST request to delete the bill
            fetch(`/Bill/DeleteBill?billNo=${billId}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json',
                }
            })
                .then(response => {
                    if (response.ok) {
                        toastr.success('Bill deleted successfully');
                        disableForm(true);
                    } else if (response.status === 404) {
                        response.text().then(text => toastr.error(text));
                    } else {
                        toastr.error('Failed to delete bill');
                    }
                })
                .catch(error => toastr.error('Network error: ' + error.message));
        });


        var table = $('#patientsTable').DataTable({
            ajax: {
                url: '/patient/all',
                dataSrc: ''
            },
            columns: [
                { data: 'patientID' },
                { data: 'patientName' },
                { data: 'address' },
                { data: 'phoneNo' },
                { data: 'gender' },
                { data: 'age' },
                { data: 'maritalStatus' },
                { data: 'bloodGroup' }
            ]
        });

        $('#patientsTable tbody').on('click', 'tr', function () {
            var data = table.row(this).data();
            disableForm(false);
            $('#txtPatient_ID').val(data.patientID);
            $('#txtPatient_Name').val(data.patientName);

            var bill = {
                PatientID: data.patientID,
                TotalPrice: 0 // Assuming initial price is 0, modify as needed
            };

            // Fetch POST request to 'Bill/AddBill'
            fetch('Bill/AddBill', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(bill)
            })
                .then(response => response.json())
                .then(createdBill => {
                    $('#txtBill_No').val(createdBill.billNo);
                    $('#patientModal').modal('hide');
                })
                .catch(error => console.error('Error:', error));

        });

        $('#btnAddPatient').click(()=>{
            $('#patientModal').modal('show');
        })

    });
</script>
