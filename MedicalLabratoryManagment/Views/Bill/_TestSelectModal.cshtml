<!-- Modal for Selecting Tests -->
<div class="modal fade" id="testSelectionModal" tabindex="-1" aria-labelledby="testModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="testModalLabel">Select a Test</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="hideModal()">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" style="overflow-x:scroll;">
                <table id="testsAvailableTable" class="table table-striped">
                    <thead>
                        <tr>
                            <th>Test ID</th>
                            <th>Test Name</th>
                            <th>Price</th>
                            <th>Test Type</th>
                            <th>Sample Type</th>
                            <th>Sample Unit</th>
                            <th>Min Value</th>
                            <th>Max Value</th>
                            <th>Select</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Data loaded dynamically -->
                    </tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" onclick="hideModal()">Close</button>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(() => {
        // Setup for testsAvailableTable
        var testsTable = $('#testsAvailableTable').DataTable({
            autoWidth: false,
            ajax: {
                url: '/Test/GetAllTests',
                dataSrc: ''
            },
            columns: [
                { data: 'testID' },
                { data: 'testName' },
                { data: 'price' },
                { data: 'testType' },
                { data: 'sampleType' },
                { data: 'sampleUnit' },
                { data: 'minimumValue' },
                { data: 'maximumValue' },
                { data: null, defaultContent: '<button class="select-btn btn btn-primary">Select</button>' }
            ]
        });

        // Handle row selection in testsAvailableTable
        $('#testsAvailableTable tbody').on('click', 'button.select-btn', function () {
            var data = testsTable.row($(this).parents('tr')).data();

            billingTable.row.add([
                data.testID,
                data.testName,
                data.price,
                '<button class="delete-btn btn btn-danger">Delete</button>',
                data.maximumValue,
                data.minimumValue
            ]).draw(false);

            // todo: MAKE A POST REQUEST TO '/Bill/SaveOrderDetails'

            postOrderDetails(data);

            // Close modal after selection
            $('#testSelectionModal').modal('hide');
        });
    })

    function postOrderDetails(orderDetails) {

        const billId = $('#txtBill_No').val();
        const patientId = $('#txtPatient_ID').val();
        $.ajax({
            url: '/Bill/SaveOrderDetailsAndTotalPrice',  // Ensure this URL matches your server's endpoint
            method: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({
                testID: orderDetails.testID,
                BillId: billId,
                BillNo: billId,
                PatientID: patientId,
                Minivalue: orderDetails.minimumValue,
                Maxvalue: orderDetails.maximumValue,
                price: orderDetails.price
            }),
            success: function (response) {
                const totalPrice = parseFloat($('#txtTprice').val());
                const additionalPrice = parseFloat(orderDetails.price);
                $('#txtTprice').val( totalPrice + additionalPrice );

                console.log('Order detail saved:', response);
                // Optionally, add notifications or update UI to reflect the addition
            },
            error: function (error) {
                console.log('Error posting order details:', error.responseText);
                // Handle errors (e.g., show an error message)
            }
        });
    }

</script>